{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Services/project.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.scss","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.scss","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/signup/signup.component.html","webpack:///./src/app/components/signup/signup.component.scss","webpack:///./src/app/components/signup/signup.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n  url = 'http://localhost:8080/';\n\n  constructor(private http: HttpClient) {}\n\n  createAPI(jsonbody) {\n    return this.http.post('/createapi', jsonbody);\n  }\n\n  login(username, password) {\n    const body = {\n      email: username,\n      password\n    };\n\n    return this.http.post('/user/login', body);\n  }\n\n  signUp(email, username, password) {\n    const body = {\n      email,\n      username,\n      password\n    };\n\n    return this.http.post('/user/signup', body);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignupComponent } from './components/signup/signup.component';\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'login', component: LoginComponent },\n  { path: '', redirectTo: '/home', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","module.exports = \"<!--Navbar-->\\n<mdb-navbar\\n  SideClass=\\\"navbar navbar-expand-lg navbar-dark cyan\\\"\\n  [containerInside]=\\\"false\\\"\\n>\\n  <!-- Navbar brand -->\\n  <mdb-navbar-brand\\n    ><a class=\\\"navbar-brand\\\" href=\\\"#\\\">SJSON</a></mdb-navbar-brand\\n  >\\n\\n  <!-- Collapsible content -->\\n  <links>\\n    <!-- Links -->\\n    <ul class=\\\"navbar-nav ml-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link waves-light\\\" mdbWavesEffect\\n          ><mdb-icon fas icon=\\\"envelope\\\"></mdb-icon> Contact<span\\n            class=\\\"sr-only\\\"\\n            >(current)</span\\n          ></a\\n        >\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link waves-light\\\" mdbWavesEffect\\n          ><mdb-icon fas icon=\\\"cog\\\"></mdb-icon> Settings</a\\n        >\\n      </li>\\n\\n      <!-- Dropdown -->\\n      <li class=\\\"nav-item dropdown\\\" dropdown>\\n        <a\\n          dropdownToggle\\n          mdbWavesEffect\\n          type=\\\"button\\\"\\n          class=\\\"nav-link dropdown-toggle waves-light\\\"\\n          mdbWavesEffect\\n        >\\n          <mdb-icon fas icon=\\\"user\\\"></mdb-icon> Profile<span\\n            class=\\\"caret\\\"\\n          ></span\\n        ></a>\\n        <div\\n          *dropdownMenu\\n          class=\\\"dropdown-menu dropdown-menu-right dropdown dropdown-primary\\\"\\n          role=\\\"menu\\\"\\n        >\\n          <a class=\\\"dropdown-item waves-light\\\" mdbWavesEffect href=\\\"#\\\"\\n            >My account</a\\n          >\\n          <a class=\\\"dropdown-item waves-light\\\" mdbWavesEffect href=\\\"#\\\"\\n            >Log out</a\\n          >\\n        </div>\\n      </li>\\n    </ul>\\n    <!-- Links -->\\n  </links>\\n  <!-- Collapsible content -->\\n</mdb-navbar>\\n<!--/.Navbar-->\\n<router-outlet></router-outlet>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { ToastrModule } from 'ngx-toastr';\nimport { HomeComponent } from './components/home/home.component';\n\nimport { NgJsonEditorModule } from 'ang-jsoneditor';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignupComponent } from './components/signup/signup.component';\n\n@NgModule({\n  declarations: [AppComponent, HomeComponent, LoginComponent, SignupComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    MDBBootstrapModule.forRoot(),\n    ToastrModule.forRoot(),\n    FormsModule,\n    HttpClientModule,\n    NgJsonEditorModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \"<div class=\\\"name\\\">\\n  <mdb-card class=\\\"card\\\">\\n    <!--Title-->\\n\\n    <!--Text-->\\n    <textarea [(ngModel)]=\\\"inputjson\\\" #inputText></textarea>\\n  </mdb-card>\\n  <button\\n    mdbBtn\\n    type=\\\"button\\\"\\n    gradient=\\\"blue\\\"\\n    rounded=\\\"true\\\"\\n    mdbWavesEffect\\n    (click)=\\\"generateApi()\\\"\\n  >\\n    Generate\\n  </button>\\n\\n  <h5 class=\\\"urlclass\\\" (click)=\\\"copyToClipboard('')\\\">{{ url }}</h5>\\n</div>\\n\"","module.exports = \".name {\\n  width: 900px;\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin-top: 3%; }\\n\\n.card {\\n  height: 100%;\\n  width: 100%; }\\n\\ntextarea {\\n  width: 100%;\\n  height: 500px;\\n  margin: auto auto; }\\n\\nh5 {\\n  cursor: pointer; }\\n\\nh5:hover {\\n  -webkit-text-emphasis-style: bold;\\n          text-emphasis-style: bold; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2dzbGFwL1Byb2plY3RzL1Nqc29uL2Zyb250ZW5kL3NyYy9hcHAvY29tcG9uZW50cy9ob21lL2hvbWUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0VBQ1osaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixjQUFjLEVBQUE7O0FBSWhCO0VBQ0UsWUFBWTtFQUNaLFdBQ0YsRUFBQTs7QUFJQTtFQUVFLFdBQVc7RUFDWCxhQUFhO0VBQ2IsaUJBQ0YsRUFBQTs7QUFJQTtFQUVFLGVBQWUsRUFBQTs7QUFHakI7RUFDRSxpQ0FBeUI7VUFBekIseUJBQXlCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2hvbWUvaG9tZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uYW1lIHtcbiAgd2lkdGg6IDkwMHB4O1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBtYXJnaW4tdG9wOiAzJTtcblxufVxuXG4uY2FyZCB7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCVcbn1cblxuXG5cbnRleHRhcmVhIHtcblxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA1MDBweDtcbiAgbWFyZ2luOiBhdXRvIGF1dG9cbn1cblxuXG5cbmg1IHtcblxuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbmg1OmhvdmVyIHtcbiAgdGV4dC1lbXBoYXNpcy1zdHlsZTogYm9sZDtcbn1cbiJdfQ== */\"","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { ProjectService } from 'src/app/Services/project.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  @ViewChild('inputText') inputText;\n  inputjson;\n  url = '';\n\n  constructor(private service: ProjectService, private toast: ToastrService) {}\n\n  ngOnInit() {\n    console.log(this.inputText.nativeElement.value);\n  }\n\n  generateApi() {\n    let provideJson = {};\n    try {\n      provideJson = JSON.parse(this.inputjson);\n    } catch (e) {\n      this.toast.error('Please provide a valid json', 'Invalid json');\n      return;\n    }\n\n    this.service.createAPI(provideJson).subscribe(res => {\n      this.printUrl(res);\n    });\n\n    this.toast.success('Api successfuly created', 'Success');\n  }\n\n  printUrl(data) {\n    this.url = data.url;\n  }\n\n  copyToClipboard(item) {\n    document.addEventListener('copy', (e: ClipboardEvent) => {\n      e.clipboardData.setData('text/plain', this.url);\n      e.preventDefault();\n      document.removeEventListener('copy', null);\n    });\n    document.execCommand('copy');\n    this.toast.info('Link copied to clipboard', 'Copied');\n  }\n}\n","module.exports = \"<div class=\\\"loginbox\\\">\\n  <h1>Login Here</h1>\\n  <form [formGroup]=\\\"loginForm\\\">\\n    <p>Username</p>\\n    <input\\n      type=\\\"text\\\"\\n      name=\\\"\\\"\\n      placeholder=\\\"Enter Username\\\"\\n      formControlName=\\\"username\\\"\\n    />\\n    <p>Password</p>\\n    <input\\n      type=\\\"password\\\"\\n      name=\\\"\\\"\\n      placeholder=\\\"Enter Password\\\"\\n      formControlName=\\\"password\\\"\\n    />\\n    <input type=\\\"submit\\\" name=\\\"\\\" value=\\\"Login\\\" (click)=\\\"login()\\\" />\\n    <a (click)=\\\"navigateTo('forgotpassword')\\\">Lost your password?</a><br />\\n    <a (click)=\\\"navigateTo('signup')\\\">Don't have an account?</a>\\n  </form>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ProjectService } from 'src/app/Services/project.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  username;\n  password;\n  constructor(\n    private projectService: ProjectService,\n    private toast: ToastrService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required, Validators.min(6)])\n    });\n  }\n\n  login() {\n    this.username = this.loginForm.value.username;\n    this.password = this.loginForm.value.password;\n\n    console.log(this.username, this.password);\n\n    this.projectService.login(this.username, this.password).subscribe(res => {\n      this.handleLogin(res);\n    });\n  }\n\n  handleLogin(res) {\n    const status = res.status;\n    if (status === 'success') {\n      this.toast.success(res.msg, 'Success');\n    } else if (status === 'failed') {\n      this.toast.error(res.msg, 'Failed');\n    } else {\n      this.toast.error('Some error occured', 'Internal Server Error');\n    }\n  }\n\n  navigateTo(where) {\n    this.router.navigate(['/' + where]);\n  }\n}\n","module.exports = \"<div class=\\\"loginbox\\\">\\n  <h1>Sign Up Here</h1>\\n  <form [formGroup]=\\\"signupForm\\\">\\n    <p>Email</p>\\n    <input\\n      type=\\\"email\\\"\\n      name=\\\"\\\"\\n      placeholder=\\\"Enter Email\\\"\\n      formControlName=\\\"email\\\"\\n    />\\n    <p>Username</p>\\n    <input\\n      type=\\\"text\\\"\\n      name=\\\"\\\"\\n      placeholder=\\\"Enter Username\\\"\\n      formControlName=\\\"username\\\"\\n    />\\n    <p>Password</p>\\n    <input\\n      type=\\\"password\\\"\\n      name=\\\"\\\"\\n      placeholder=\\\"Enter Password\\\"\\n      formControlName=\\\"password\\\"\\n    />\\n\\n    <p>Re-type Password</p>\\n    <input\\n      type=\\\"password\\\"\\n      name=\\\"\\\"\\n      placeholder=\\\"Enter Password Again\\\"\\n      formControlName=\\\"password_again\\\"\\n    />\\n    <input type=\\\"submit\\\" name=\\\"\\\" value=\\\"Login\\\" (click)=\\\"signUp()\\\" />\\n\\n    <a (click)=\\\"navigateTo('login')\\\">Already have an account?</a>\\n  </form>\\n</div>\\n\"","module.exports = \".signupparent {\\n  height: 400px;\\n  width: 400px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2dzbGFwL1Byb2plY3RzL1Nqc29uL2Zyb250ZW5kL3NyYy9hcHAvY29tcG9uZW50cy9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLFlBQVksRUFBQSIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2lnbnVwL3NpZ251cC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zaWdudXBwYXJlbnQge1xuICBoZWlnaHQ6IDQwMHB4O1xuICB3aWR0aDogNDAwcHg7XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ProjectService } from 'src/app/Services/project.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n  signupForm: FormGroup;\n\n  constructor(\n    private router: Router,\n    private projectService: ProjectService,\n    private toast: ToastrService\n  ) {}\n\n  ngOnInit() {\n    this.signupForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      username: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required, Validators.min(6)]),\n      password_again: new FormControl('', [Validators.required])\n    });\n  }\n\n  signUp() {\n    if (\n      this.signupForm.value.password !== this.signupForm.value.password_again\n    ) {\n      this.toast.error('Password and retype-password does not match', 'Error');\n      return;\n    }\n\n    this.projectService\n      .signUp(\n        this.signupForm.value.email,\n        this.signupForm.value.username,\n        this.signupForm.value.password\n      )\n      .subscribe(res => {\n        this.handleSignUp(res);\n      });\n  }\n\n  handleSignUp(res) {\n    const status = res.status;\n    if (status === 'success') {\n      this.toast.success(res.msg, 'Success');\n    } else if (status === 'failed') {\n      this.toast.error(res.msg, 'Failed');\n    } else {\n      this.toast.error('Some error occured', 'Internal Server Error');\n    }\n  }\n\n  navigateTo(where) {\n    this.router.navigate(['/' + where]);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}