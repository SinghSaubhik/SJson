{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Services/project.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.scss","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n  url = 'http://localhost:3000/';\n\n  constructor(private http: HttpClient) {}\n\n  createAPI(jsonbody) {\n    const res = JSON.parse(jsonbody);\n    return this.http.post('createapi', res);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: '', redirectTo: '/home', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","module.exports = \"<!--Navbar-->\\n<mdb-navbar\\n  SideClass=\\\"navbar navbar-expand-lg navbar-dark cyan\\\"\\n  [containerInside]=\\\"false\\\"\\n>\\n  <!-- Navbar brand -->\\n  <mdb-navbar-brand\\n    ><a class=\\\"navbar-brand\\\" href=\\\"#\\\">Navbar</a></mdb-navbar-brand\\n  >\\n\\n  <!-- Collapsible content -->\\n  <links>\\n    <!-- Links -->\\n    <ul class=\\\"navbar-nav ml-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link waves-light\\\" mdbWavesEffect\\n          ><mdb-icon fas icon=\\\"envelope\\\"></mdb-icon> Contact<span\\n            class=\\\"sr-only\\\"\\n            >(current)</span\\n          ></a\\n        >\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link waves-light\\\" mdbWavesEffect\\n          ><mdb-icon fas icon=\\\"cog\\\"></mdb-icon> Settings</a\\n        >\\n      </li>\\n\\n      <!-- Dropdown -->\\n      <li class=\\\"nav-item dropdown\\\" dropdown>\\n        <a\\n          dropdownToggle\\n          mdbWavesEffect\\n          type=\\\"button\\\"\\n          class=\\\"nav-link dropdown-toggle waves-light\\\"\\n          mdbWavesEffect\\n        >\\n          <mdb-icon fas icon=\\\"user\\\"></mdb-icon> Profile<span\\n            class=\\\"caret\\\"\\n          ></span\\n        ></a>\\n        <div\\n          *dropdownMenu\\n          class=\\\"dropdown-menu dropdown-menu-right dropdown dropdown-primary\\\"\\n          role=\\\"menu\\\"\\n        >\\n          <a class=\\\"dropdown-item waves-light\\\" mdbWavesEffect href=\\\"#\\\"\\n            >My account</a\\n          >\\n          <a class=\\\"dropdown-item waves-light\\\" mdbWavesEffect href=\\\"#\\\"\\n            >Log out</a\\n          >\\n        </div>\\n      </li>\\n    </ul>\\n    <!-- Links -->\\n  </links>\\n  <!-- Collapsible content -->\\n</mdb-navbar>\\n<!--/.Navbar-->\\n<router-outlet></router-outlet>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { HomeComponent } from './components/home/home.component';\n\n@NgModule({\n  declarations: [AppComponent, HomeComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    MDBBootstrapModule.forRoot(),\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \"<div>\\n  <mdb-card class=\\\"name\\\">\\n    <!--Title-->\\n\\n    <!--Text-->\\n    <textarea [(ngModel)]=\\\"inputjson\\\"></textarea>\\n  </mdb-card>\\n  <button\\n    mdbBtn\\n    type=\\\"button\\\"\\n    gradient=\\\"blue\\\"\\n    rounded=\\\"true\\\"\\n    mdbWavesEffect\\n    (click)=\\\"generateApi()\\\"\\n  >\\n    Generate\\n  </button>\\n\\n  <h5>{{ url }}</h5>\\n</div>\\n\"","module.exports = \".name {\\n  width: 70%;\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin-top: 3%; }\\n\\ntextarea {\\n  width: 100%;\\n  height: 500px;\\n  margin: auto auto; }\\n\\nbutton {\\n  margin-left: 75%; }\\n\\nh5 {\\n  margin-left: 25%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2dzbGFwL1Byb2plY3RzL1Nqc29uL2Zyb250ZW5kL3NyYy9hcHAvY29tcG9uZW50cy9ob21lL2hvbWUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFVO0VBQ1YsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixjQUFjLEVBQUE7O0FBTWhCO0VBQ0UsV0FBVztFQUNYLGFBQWE7RUFDYixpQkFDRixFQUFBOztBQUVBO0VBQ0UsZ0JBQ0YsRUFBQTs7QUFFQTtFQUNFLGdCQUNGLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2hvbWUvaG9tZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uYW1lIHtcbiAgd2lkdGg6IDcwJTtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgbWFyZ2luLXRvcDogMyU7XG5cbn1cblxuXG5cbnRleHRhcmVhIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogNTAwcHg7XG4gIG1hcmdpbjogYXV0byBhdXRvXG59XG5cbmJ1dHRvbiB7XG4gIG1hcmdpbi1sZWZ0OiA3NSVcbn1cblxuaDUge1xuICBtYXJnaW4tbGVmdDogMjUlXG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ProjectService } from 'src/app/Services/project.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  inputjson;\n  url = 'http://localhost:3000/api/2Zxbr1';\n\n  constructor(private service: ProjectService) {}\n\n  ngOnInit() {}\n\n  generateApi() {\n    this.service.createAPI(this.inputjson).subscribe(res => {\n      this.printUrl(res);\n    });\n    console.log(this.inputjson);\n  }\n\n  printUrl(data) {\n    this.url = data.url;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}